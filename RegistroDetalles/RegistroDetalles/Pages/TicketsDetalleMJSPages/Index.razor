@page "/TicketsDetalle"
@inject NavigationManager navigation

<PageTitle>TicketsDetalleMJS</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>TicketsDetalle</strong></h3>
			<button type="button" class="btn btn-outline-primary" @onclick="IrACrear"><i class="bi bi-plus-circle" /> Crear</button>
		</div>
		@*Body*@
		<div class="card-body">
			@if (loading)
			{
				<div class="d-flex justify-content-center">
					<div class="spinner-border text-info" role="status">
						<span class="visually-hidden">Cargando...</span>
					</div>
				</div>
			}
			else if (ticketsDetalles.Count == 0)
			{
				<h1 class="miMensaje"><i class="bi bi-exclamation-triangle" /> No hay detalles de tickets creados</h1>
			}
			else
			{

				<table class="table table-bordered">
					<thead>
						<tr>
							<th>Id</th>
							<th>TicketId</th>
							<th>Emisor</th>
							<th>Mensaje</th>
							<th>Ver</th>
							<th>Editar</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var ticketsDetalle in ticketsDetalles)
						{
							<tr>
								<td>@ticketsDetalle.Id</td>
								<td>@ticketsDetalle.TicketId</td>
								<td>@ticketsDetalle.Emisor</td>
								<td>@ticketsDetalle.Mensaje</td>
								<td><button type="button" class="btn btn-outline-info" @onclick="()=> IrADetalles(ticketsDetalle.TicketId)"><i class="bi bi-eye" /></button></td>
								<td><button type="button" class="btn btn-outline-warning" @onclick="()=> IrAEditar(ticketsDetalle.TicketId)"><i class="bi bi-pencil-square" /></button></td>
								<td><button type="button" class="btn btn-outline-danger" @onclick="()=> IrAEliminar(ticketsDetalle.TicketId)"><i class="bi bi-trash3-fill" /></button></td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
		@*Footer*@
		<div class="card-footer">
		</div>
	</div>
</div>

@code {
	public List<TicketsDetalles> ticketsDetalles = new List<TicketsDetalles>();
	public TicketsDetalles ticketsDetalle { get; set; } = new TicketsDetalles();
	public bool loading { get; set; } = true;

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);

		loading = false;

		if (ticketsDetalles.Count == 0)
			StateHasChanged();
	}

	public void IrACrear()
	{
		navigation.NavigateTo("/CreateTicketsDetalle");
	}
	void IrADetalles(int id)
	{
		navigation.NavigateTo($"/DetailsTickets/ticketId={id}");
	}
	void IrAEditar(int id)
	{
		navigation.NavigateTo($"/EditTickets/ticketId={id}");
	}
	void IrAEliminar(int id)
	{
		navigation.NavigateTo($"/DeleteTickets/ticketId={id}");
	}
}
